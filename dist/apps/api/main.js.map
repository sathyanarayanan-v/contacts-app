{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/api/src/app/app.controller.ts","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/common/common.module.ts","webpack:///./apps/api/src/app/common/common.service.ts","webpack:///./apps/api/src/app/contacts/contacts.controller.ts","webpack:///./apps/api/src/app/contacts/contacts.module.ts","webpack:///./apps/api/src/app/contacts/contacts.repository.ts","webpack:///./apps/api/src/app/contacts/contacts.schema.ts","webpack:///./apps/api/src/app/contacts/contacts.service.ts","webpack:///./apps/api/src/main.ts","webpack:///./libs/shared/src/lib/api-interfaces/index.ts","webpack:///external \"@nestjs/common\"","webpack:///external \"@nestjs/core\"","webpack:///external \"dotenv\"","webpack:///external \"mongoose\"","webpack:///external \"tslib\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Controller, Get } from '@nestjs/common';\n@Controller()\nexport class AppController {\n  constructor() {}\n\n  @Get()\n  getData() {\n    return {\n      message:'If you are seeing this, you are trying to view the contacts app api from browser.'\n    }\n  }\n}\n","import { Module } from '@nestjs/common';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ContactsModule } from './contacts/contacts.module';\nimport { CommonModule } from './common/common.module';\n\n@Module({\n  imports: [ContactsModule, CommonModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n","import { Module } from '@nestjs/common';\nimport { CommonService } from './common.service';\n\n@Module({\n  providers: [CommonService],\n  exports:[CommonService]\n})\nexport class CommonModule {}\n","import { Injectable } from '@nestjs/common';\nimport {IErrorMessage} from '@contacts-app/api-interfaces'\n\n@Injectable()\nexport class CommonService {\n    constructor(){}\n    sendErrorMessage = (message: string, error?: boolean): IErrorMessage => ({\n        error,\n        message\n      });\n}\n","import { Controller, Get, Post, Body, Put } from '@nestjs/common';\nimport { ContactsService } from './contacts.service';\nimport { IContactSchema } from './contacts.schema';\nimport { IErrorMessage, IContact } from '@contacts-app/api-interfaces';\n\n@Controller('contacts')\nexport class ContactsController {\n  constructor(private contactService: ContactsService) {}\n  @Get()\n  async getContacts(): Promise<IContactSchema[] | IErrorMessage> {\n    return await this.contactService.getContacts();\n  }\n  @Post()\n  async createContact(\n    @Body() contact: IContact\n  ): Promise<IContactSchema | IErrorMessage> {\n    return await this.contactService.addContact(contact);\n  }\n  @Post('delete')\n  async deleteContact(\n    @Body('ids') ids: Array<string>\n  ): Promise<IContactSchema | IErrorMessage> {\n    return await this.contactService.deleteContacts(ids);\n  }\n  @Put()\n  async updateContact(@Body() contact:IContact){\n    return await this.contactService.updateContact(contact)\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ContactsController } from './contacts.controller';\nimport { ContactsService } from './contacts.service';\nimport { CommonModule } from '../common/common.module';\nimport { ContactRepository } from './contacts.repository';\n\n@Module({\n  controllers: [ContactsController],\n  providers: [ContactsService,ContactRepository],\n  imports:[CommonModule]\n})\nexport class ContactsModule {}\n","import { CommonService } from '../common/common.service';\nimport { IContactSchema, Contact } from './contacts.schema';\nimport { IErrorMessage, IContact } from '@contacts-app/api-interfaces';\nimport { async } from 'rxjs/internal/scheduler/async';\n\nexport class ContactRepository {\n  commonService: CommonService;\n  constructor() {\n    this.commonService = new CommonService();\n  }\n\n  fetchContacts = async (): Promise<IContactSchema[] | IErrorMessage> =>\n    await Contact.find()\n      .then((contacts) => contacts)\n      .catch((err) =>\n        this.commonService.sendErrorMessage(\n          `Unable to fetch contacts. Error :: ${err}`\n        )\n      );\n  addNewContact = async (\n    contact: IContact\n  ): Promise<IContactSchema | IErrorMessage> =>\n    await new Contact(contact)\n      .save()\n      .then((newContact) => newContact)\n      .catch((err) => {\n        console.log(err);\n        return this.commonService.sendErrorMessage(\n          `Unable to insert contact. Error :: Contact name already exist`,true\n        );\n      });\n\n  deleteContactById = async (\n    _id: string\n  ): Promise<IContactSchema | IErrorMessage> =>\n    await Contact.findOneAndDelete({ _id })\n      .then((contact) => contact)\n      .catch((error) =>\n        this.commonService.sendErrorMessage(\n          `Unable to delete contact.Error :: ${error}`,true\n        )\n      );\n  updateContact = async (\n    contact: IContact\n  ): Promise<IContactSchema | IErrorMessage> =>\n    await Contact.findOneAndUpdate({ _id: contact._id }, contact, {\n      new: true,\n      runValidators: false,\n    })\n      .then((updatedContact) => updatedContact)\n      .catch((err) => {\n        console.log(err);\n        return this.commonService.sendErrorMessage(\n          `Unable to update contact. Error :: ${err}`,true\n        );\n      });\n}\n","import * as mongoose from 'mongoose';\nexport interface IContactSchema extends mongoose.Document {\n  name?: string;\n  number?: string;\n  email?: string;\n  address?: string;\n  group?: 'FAMILY' | 'COLLEAGUES' | 'FRIENDS';\n  company?: string;\n  title?: string;\n}\nconst isValidContactName = async name => {\n    const contacts = await Contact.find({ name });\n    if (contacts.length === 0) return true;\n    return false;\n  };\nexport const ContactSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  number: {\n    type: String,\n    required: true,\n  },\n  email:{\n      type:String,\n      required:false\n  },\n  address:{\n      type:String,\n      required:false\n  },\n  group:{\n      type:String,\n      required:false\n  },\n  company:{\n      type:String,\n      required:false\n  },\n  title:{\n      type:String,\n      required:false\n  }\n});\nexport const Contact = mongoose.model<IContactSchema>('Contact', ContactSchema, 'contacts');","import { Injectable } from '@nestjs/common';\nimport { ContactRepository } from './contacts.repository';\nimport { IContactSchema } from './contacts.schema';\nimport { IErrorMessage, IContact } from '@contacts-app/api-interfaces';\nimport { async } from 'rxjs/internal/scheduler/async';\n\n@Injectable()\nexport class ContactsService {\n  constructor(private contactRepository: ContactRepository) {}\n\n  getContacts = async (): Promise<IContactSchema[] | IErrorMessage> =>\n    await this.contactRepository.fetchContacts();\n  addContact = async (\n    contact: IContact\n  ): Promise<IContactSchema | IErrorMessage> =>\n    await this.contactRepository.addNewContact(contact);\n  deleteContacts = async (ids: Array<string>): Promise<any> => {\n    const responseArray = [];\n    for (let i = 0; i < ids.length; i++) {\n      const response = await this.contactRepository.deleteContactById(ids[i]);\n      responseArray.push(response);\n    }\n    return responseArray;\n  };\n  updateContact = async(contact:IContact):Promise<IContactSchema | IErrorMessage> => await this.contactRepository.updateContact(contact)\n}\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport * as dotenv from 'dotenv'\nimport { AppModule } from './app/app.module';\nimport * as mongoose from 'mongoose'\nexport const mongooseConnection = mongoose.connect(process.env.DB_URL, {\n  useFindAndModify: false,\n  useNewUrlParser: true,\n  useCreateIndex: true,\n  useUnifiedTopology: true\n},(error) => {\n  if(error){\n    console.log(`Error connecting to database because of ${error}`)\n  }else{\n    console.log('Successfully connected to database.')\n  }\n});\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.enableCors()\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port,'0.0.0.0', () => {\n    Logger.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\ndotenv.config()\nbootstrap();\n","export * from './api-interfaces'","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"dotenv\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");"],"sourceRoot":""}